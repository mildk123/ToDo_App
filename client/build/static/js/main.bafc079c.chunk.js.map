{"version":3,"sources":["Helper/Paper/index.js","Helper/Button/index.js","Helper/TodoInput/index.js","Helper/GetTodos/index.js","Helper/Drawer/index.js","Components/Dashboard/index.js","Helper/Dialog/index.js","Screens/Auth/index.js","Helper/AppBar/index.js","Redux/actions/authActions.js","Components/Error/index.js","Routes/index.js","App/index.js","Redux/reducers/authReducer.js","Redux/rootReducer.js","Redux/Store.js","index.js"],"names":["Paper","withStyles","theme","button","margin","spacing","unit","input","display","props","react_default","a","createElement","Button_default","onClick","click","style","width","btnWidth","btnMargin","variant","color","btnColor","children","todoInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","Helper_Paper","padding","elevation","TextField_default","label","onChange","event","handleChange","target","value","fullWidth","multiline","rowsMax","Helper_Button","addTask","React","Component","GetTodos","remove","key","arrayKey","fetch","method","headers","Content-Type","body","JSON","stringify","title","then","Response","array","todosList","splice","setState","catch","error","console","log","message","isLoaded","isLoading","getTodos","res","json","todos","_this3","_this$state","react","map","item","index","_id","float","height","marginRight","border","background","borderRadius","clear","desc","flex","alignContent","alignItems","justifyContent","MiniDrawer","open","handleDrawerOpen","handleDrawerClose","_classNames3","_classNames4","_this$props","classes","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","aria-label","menuButton","hide","Menu_default","Typography_default","noWrap","Drawer_default","drawer","drawerOpen","drawerClose","paper","toolbar","direction","ChevronRight_default","ChevronLeft_default","Divider_default","content","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","flexShrink","whiteSpace","overflowX","breakpoints","up","objectSpread","mixins","flexGrow","withTheme","Dashboard","TaskName","Description","todoGet","current","swal","name","e","createRef","Helper_Drawer","TodoInput","marginTop","Helper_GetTodos","ref","connect","FormDialog","handleClickOpen","handleRegisterForm","registerForm","handleClose","handleRegister","email","password","firstname","lastname","isloading","response","data","registered","history","push","alert","err","handleLogin","match","Dialog_default","onClose","DialogTitle_default","id","DialogContent_default","DialogContentText_default","autoFocus","type","text","autoComplete","DialogActions_default","aria-labelledby","AuthScreen","onChangeHandler","targetName","targetValue","showLogin","Dialogs","showRegister","localStorage","getItem","Dialog_FormDialog","assign","ButtonAppBar","showDrawer","boolean","onSignOut","mapDispatchToProps","Error","Helper_AppBar","Routes","BrowserRouter","Switch","Route","path","component","Authentication","exact","App","src_Routes","reducer","arguments","length","undefined","action","user","payload","signout","allReducer","combineReducers","authReducer","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bafc079c.chunk.js","sourcesContent":["import Paper from '@material-ui/core/Paper';\r\n\r\nexport default Paper;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n});\r\n\r\nfunction ContainedButtons(props) {\r\n  return (\r\n      <Button \r\n      onClick={props.click}\r\n      style={{width: props.btnWidth, margin: props.btnMargin}} \r\n      variant={props.variant} \r\n      color={props.btnColor}>\r\n        {props.children}\r\n      </Button>\r\n  );\r\n}\r\n\r\nContainedButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ContainedButtons);\r\n","import React from 'react';\r\n\r\nimport Paper from '../Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '../Button'\r\n\r\n\r\n\r\n\r\nclass todoInput extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style={{padding: 15 }} elevation={2}>\r\n                    <TextField\r\n                        label=\"Task Name\"\r\n                        onChange={(event) => this.props.handleChange('TaskName', event.target.value)}\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        label=\"Descprition\"\r\n                        multiline\r\n                        rowsMax=\"4\"\r\n                        onChange={(event) => this.props.handleChange('Description', event.target.value)}\r\n                        margin='dense'\r\n                        fullWidth\r\n                    />\r\n\r\n                    <Button \r\n                    btnWidth=\"30%\" \r\n                    btnMargin=\"4%\"\r\n                    variant=\"contained\" \r\n                    btnColor=\"secondary\"\r\n                    click={() => this.props.addTask()}                    >\r\n                    Add\r\n                    </Button>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default todoInput;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Paper from '../Paper'\r\n\r\n\r\nclass GetTodos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todosList: [],\r\n            isLoaded: false,\r\n            isLoading: true\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getTodos()\r\n    }\r\n\r\n    getTodos() {\r\n        fetch('/todos/getAll')\r\n            .then(res => res.json())\r\n            .then(todos =>\r\n                this.setState({\r\n                    todosList: todos,\r\n                    isLoaded: true,\r\n                    isLoading: false\r\n                })\r\n            )\r\n            .catch(error => console.log(error.message)\r\n            )\r\n    }\r\n\r\n    remove = (key, arrayKey) => {\r\n        fetch('/todos/remove', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ title: key })\r\n        })\r\n            .then(Response => {\r\n                // console.log('resp', Response);\r\n\r\n                let array = this.state.todosList\r\n                array.splice(arrayKey, 1)\r\n                this.setState({\r\n                    todosList: array\r\n                })\r\n            })\r\n            .catch(error => console.log(error.message)\r\n            )\r\n\r\n    }\r\n\r\n    render() {\r\n        const { todosList, isLoaded } = this.state;\r\n        if (isLoaded) {\r\n            return (\r\n                <Fragment >\r\n                    {todosList.map((item, index) => {\r\n                        return <Paper key={item._id} style={{ padding: 10, float: 'left', width: 340, height: 120, marginRight: 8 }}>\r\n                            <h3 style={{ float: 'left' }}>{item.title}</h3>\r\n                            <button\r\n                                onClick={(key, arrayKey) => this.remove(item.title, index)}\r\n                                style={{\r\n                                    float: 'right',\r\n                                    marginRight: 5,\r\n                                    border: 'none',\r\n                                    color: 'white',\r\n                                    background: '#ff6666',\r\n                                    width: 55,\r\n                                    borderRadius: '15px'\r\n                                }}>X</button>\r\n                            <p style={{ float: 'left', clear: 'both' }}>{item.desc}</p>\r\n                        </Paper>\r\n                    })}\r\n                </Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <h3 style={{ flex: 1, alignContent: 'center', alignItems: ' center', justifyContent: 'center' }}>Wait...</h3>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetTodos;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n// import List from '@material-ui/core/List';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing.unit * 7 + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9 + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n});\r\n\r\nclass MiniDrawer extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    \r\n    render() {\r\n        const { classes, theme } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    color='secondary'\r\n                    className={classNames(classes.appBar, {\r\n                        [classes.appBarShift]: this.state.open,\r\n                    })}\r\n                >\r\n                    <Toolbar disableGutters={!this.state.open}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton, {\r\n                                [classes.hide]: this.state.open,\r\n                            })}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            Todo List\r\n            </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    className={classNames(classes.drawer, {\r\n                        [classes.drawerOpen]: this.state.open,\r\n                        [classes.drawerClose]: !this.state.open,\r\n                    })}\r\n                    classes={{\r\n                        paper: classNames({\r\n                            [classes.drawerOpen]: this.state.open,\r\n                            [classes.drawerClose]: !this.state.open,\r\n                        }),\r\n                    }}\r\n                    open={this.state.open}\r\n                >\r\n                    <div className={classes.toolbar}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    {/* <List>\r\n\r\n                   \r\n                        <ListItem button key='Sign Out'>\r\n                            <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                            <ListItemText primary={'Sign Out'} />\r\n                        </ListItem>\r\n                    </List> */}\r\n\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(MiniDrawer);\r\n","import React, { Component } from 'react';\r\nimport TodoInput from '../../Helper/TodoInput'\r\nimport GetTodos from '../../Helper/GetTodos'\r\n\r\nimport Drawer from '../../Helper/Drawer';\r\nimport swal from 'sweetalert'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.todoGet = React.createRef();\r\n    }\r\n\r\n\r\n    addTask = () => {\r\n        if (this.state.TaskName != null) {\r\n            let TaskName = this.state.TaskName;\r\n            let desc = this.state.Description;\r\n            fetch('/todos/add', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ title: TaskName, desc: desc })\r\n            })\r\n               .catch(error => console.log(error.message)\r\n               )\r\n\r\n               this.todoGet.current.getTodos();\r\n\r\n\r\n        } else {\r\n            swal('Please fill the above boxes.')\r\n        }\r\n    }\r\n\r\n    handleChange = (name, e) => {\r\n        this.setState({\r\n            [name]: e\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Drawer />\r\n                <main style={{ width: '100%', padding: 10 }}>\r\n                    <div style={{ width: '85%', marginLeft: '10%', marginRight: '10%', }}>\r\n\r\n                        <TodoInput\r\n                            handleChange={this.handleChange}\r\n                            addTask={this.addTask}\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: '85%', marginLeft: '10%', marginTop: '3%', }}>\r\n                        <GetTodos ref={this.todoGet} />\r\n                    </div>\r\n                </main>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class FormDialog extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            open: false,\r\n            registerForm: null\r\n        };\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleRegisterForm = () => {\r\n        this.setState({ open: true, registerForm: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false,\r\n            registerForm: null,\r\n        });\r\n    };\r\n\r\n    handleRegister = () => {\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n        let firstname = this.state.firstname;\r\n        let lastname = this.state.lastname;\r\n        // Register\r\n        if (email && password && firstname && lastname) {\r\n\r\n            this.setState({\r\n                open: false,\r\n                registerForm: null,\r\n                isloading: true\r\n            }, () => {\r\n                fetch(\"/auth/register\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        password: password,\r\n                        firstname: firstname,\r\n                        lastname: lastname,\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data.message)\r\n                        if (data.registered === true) {\r\n                            this.props.history.push('/Home')\r\n                        }else {\r\n                            alert(data.message)\r\n                        }\r\n                    })\r\n                    .catch(err => err.message)\r\n            })\r\n        } else {\r\n            alert('Please fill all the boxes!')\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        let email = this.state.email;\r\n        let password = this.state.password;\r\n        // Login\r\n        if (email && password) {\r\n\r\n            this.setState({\r\n                open: false,\r\n                isloading: true\r\n            }, () => {\r\n                fetch(\"/auth/login\", {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        email: email,\r\n                        password: password,\r\n                    })\r\n                })\r\n\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        console.log(data)\r\n                        if (data.match === true) {\r\n                            this.props.history.push('/Home')\r\n                        }else {\r\n                            alert(data.message)\r\n                        }\r\n                    })\r\n                    .catch(err => err.message)\r\n            })\r\n        } else {\r\n            alert('Please fill all the boxes!')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.registerForm && <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\r\n                    <DialogContent>\r\n\r\n                        <DialogContentText>\r\n                            Fill in your credentials to login.\r\n            </DialogContentText>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            onChange={(text) => { this.setState({ email: text.target.value }) }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"Password\"\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={(text) => { this.setState({ password: text.target.value }) }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleLogin} color=\"primary\">\r\n                            Login\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>}\r\n\r\n                {this.state.registerForm && <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Create Account</DialogTitle>\r\n                    <DialogContent>\r\n\r\n                        <DialogContentText>\r\n                            Fill in your credentials to signup.\r\n            </DialogContentText>\r\n\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            type=\"email\"\r\n                            fullWidth\r\n                            onChange={(text) => { this.setState({ email: text.target.value }) }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            onChange={(text) => { this.setState({ password: text.target.value }) }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"firstname\"\r\n                            label=\"First Name\"\r\n                            type=\"firstname\"\r\n                            fullWidth\r\n                            onChange={(text) => { this.setState({ firstname: text.target.value }) }}\r\n                        />\r\n\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"lastname\"\r\n                            label=\"Last Name\"\r\n                            type=\"lastname\"\r\n                            fullWidth\r\n                            onChange={(text) => { this.setState({ lastname: text.target.value }) }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleRegister} color=\"primary\">\r\n                            Done\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react';\n\n// Login Dialog \nimport Dialog from '../../Helper/Dialog/'\n\n// Material Button\nimport Button from '@material-ui/core/Button';\n\n// Facebook Login\n\n// Local CSS\nimport './style.css'\n\n\n\n\nclass AuthScreen extends Component {\n    constructor() {\n        super()\n\n        this.Dialogs = React.createRef()\n    }\n\n\n    componentWillMount() {\n        if (localStorage.getItem('userSignup')) {\n            this.props.history.push('Home')\n        }\n    }\n\n    onChangeHandler = (targetName, targetValue) => {\n        this.setState({\n            [targetName]: targetValue,\n        })\n    }\n\n    showLogin = () => {\n        this.Dialogs.current.handleClickOpen();\n    }\n\n    showRegister= () => {\n        this.Dialogs.current.handleRegisterForm();\n    }\n\n    render() {\n        return <Fragment >\n            <div className=\"myComponent\">\n                <h1>ToDo App</h1>\n\n                <Dialog ref={this.Dialogs} {...this.props}/>\n\n                <div className='btnDiv'>\n                    <Button className=\"btn\" onClick={this.showLogin} variant=\"contained\" color=\"secondary\" >\n                        Login\n                    </Button>\n\n                    <Button className=\"btn\" onClick={this.showRegister} variant=\"contained\" color=\"primary\" >\n                        Register\n                    </Button>\n                </div>\n\n            </div>\n        </Fragment>\n    }\n\n\n}\n\nexport default AuthScreen;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../Redux/actions/authActions';\r\n\r\n\r\n\r\n\r\nclass ButtonAppBar extends React.Component {\r\n\r\n  showDrawer = (boolean) => {\r\n    this.props.onSignOut(boolean)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar color={this.props.color} position=\"static\">\r\n          <Toolbar>\r\n            <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon onClick={() => this.showDrawer(true)} />\r\n            </IconButton>\r\n            {this.props.children}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return state\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSignOut: signOut\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);\r\n","const updateUser = (data) => {\r\n    return {\r\n        type: 'UPDATE_USER',\r\n        payload : data\r\n\r\n    }\r\n}\r\n\r\nconst removeUser = () => {\r\n    return {\r\n        type: 'REMOVE_USER'\r\n    }\r\n}\r\n\r\nconst signOut = (data) => {\r\n    return {\r\n        type: 'SIGN_OUT',\r\n        data\r\n    }\r\n}\r\n\r\nexport {\r\n    updateUser,\r\n    removeUser,\r\n    signOut\r\n}","import React from 'react';\r\nimport AppBar from '../../Helper/AppBar'\r\nimport Drawer from '../../Helper/Drawer'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div>\r\n            <AppBar color=\"secondary\">Error</AppBar>\r\n            <Drawer />\r\n            <h1>\r\n                Error 404 //// Page not found..\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport Dashboard from '../Components/Dashboard'\r\nimport Authentication from '../Screens/Auth'\r\nimport Error from '../Components/Error/'\r\n\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route path='/' component={Authentication} exact />\r\n            <Route path='/Home' component={Dashboard} />\r\n            <Route component={Error} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n\r\n);\r\n\r\nexport default Routes;","import React, { Component, Fragment } from 'react';\r\nimport Routes from '../Routes/'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fragment>\r\n                    <Routes />\r\n                </Fragment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","const reducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_USER\" : {\r\n            return {...state, user : action.payload}\r\n        }        \r\n        case \"REMOVE_USER\" : {\r\n            return {...state, user : action.payload}\r\n        }\r\n        case \"SIGN_OUT\" : {\r\n            return {...state, signout : action.data}\r\n        }\r\n        default : {\r\n            return state\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux'\r\nimport authReducer from './reducers/authReducer'\r\n\r\n\r\nconst allReducer =  combineReducers({\r\n\tauthReducer\r\n})\r\n\r\nexport default allReducer ","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './Redux/Store'\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}